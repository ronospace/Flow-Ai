// Mocks generated by Mockito 5.4.6 from annotations
// in flow_ai/test/core/services/ai_engine_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flow_ai/core/models/ai_insights.dart' as _i6;
import 'package:flow_ai/core/models/cycle_data.dart' as _i2;
import 'package:flow_ai/core/services/ai_chat_service.dart' as _i7;
import 'package:flow_ai/core/services/ai_engine.dart' as _i3;
import 'package:flow_ai/generated/app_localizations.dart' as _i9;
import 'package:flutter_chat_types/flutter_chat_types.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCyclePrediction_0 extends _i1.SmartFake
    implements _i2.CyclePrediction {
  _FakeCyclePrediction_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AIEngine].
///
/// See the documentation for Mockito's code generation for more information.
class MockAIEngine extends _i1.Mock implements _i3.AIEngine {
  MockAIEngine() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get isFlowAIEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isFlowAIEnabled),
            returnValue: false,
          )
          as bool);

  @override
  String get engineStatus =>
      (super.noSuchMethod(
            Invocation.getter(#engineStatus),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#engineStatus),
            ),
          )
          as String);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.CyclePrediction> predictNextCycle(
    List<_i2.CycleData>? historicalCycles,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#predictNextCycle, [historicalCycles]),
            returnValue: _i5.Future<_i2.CyclePrediction>.value(
              _FakeCyclePrediction_0(
                this,
                Invocation.method(#predictNextCycle, [historicalCycles]),
              ),
            ),
          )
          as _i5.Future<_i2.CyclePrediction>);

  @override
  _i5.Future<List<_i6.AIInsight>> generateInsights(
    List<_i2.CycleData>? cycles,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#generateInsights, [cycles]),
            returnValue: _i5.Future<List<_i6.AIInsight>>.value(
              <_i6.AIInsight>[],
            ),
          )
          as _i5.Future<List<_i6.AIInsight>>);

  @override
  _i5.Future<List<_i6.PatternDetection>> detectPatterns(
    List<_i2.CycleData>? cycles,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#detectPatterns, [cycles]),
            returnValue: _i5.Future<List<_i6.PatternDetection>>.value(
              <_i6.PatternDetection>[],
            ),
          )
          as _i5.Future<List<_i6.PatternDetection>>);

  @override
  _i5.Future<List<_i6.AIInsight>> generateEnhancedInsights({
    required String? userId,
    required List<_i2.CycleData>? cycles,
    List<String>? detectedPatterns,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateEnhancedInsights, [], {
              #userId: userId,
              #cycles: cycles,
              #detectedPatterns: detectedPatterns,
            }),
            returnValue: _i5.Future<List<_i6.AIInsight>>.value(
              <_i6.AIInsight>[],
            ),
          )
          as _i5.Future<List<_i6.AIInsight>>);
}

/// A class which mocks [AIChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAIChatService extends _i1.Mock implements _i7.AIChatService {
  MockAIChatService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<List<_i8.Message>> get messagesStream =>
      (super.noSuchMethod(
            Invocation.getter(#messagesStream),
            returnValue: _i5.Stream<List<_i8.Message>>.empty(),
          )
          as _i5.Stream<List<_i8.Message>>);

  @override
  List<_i8.Message> get messages =>
      (super.noSuchMethod(
            Invocation.getter(#messages),
            returnValue: <_i8.Message>[],
          )
          as List<_i8.Message>);

  @override
  bool get isFlowAIEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isFlowAIEnabled),
            returnValue: false,
          )
          as bool);

  @override
  String get aiServiceStatus =>
      (super.noSuchMethod(
            Invocation.getter(#aiServiceStatus),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#aiServiceStatus),
            ),
          )
          as String);

  @override
  _i5.Future<void> initialize({
    required String? userId,
    required String? userName,
    _i9.AppLocalizations? localizations,
    String? flowAIApiKey,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#initialize, [], {
              #userId: userId,
              #userName: userName,
              #localizations: localizations,
              #flowAIApiKey: flowAIApiKey,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> sendMessage(_i8.TextMessage? message) =>
      (super.noSuchMethod(
            Invocation.method(#sendMessage, [message]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<String> getSuggestedReplies() =>
      (super.noSuchMethod(
            Invocation.method(#getSuggestedReplies, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  _i5.Future<void> clearMessages() =>
      (super.noSuchMethod(
            Invocation.method(#clearMessages, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> getMemoryStats() =>
      (super.noSuchMethod(
            Invocation.method(#getMemoryStats, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i5.Future<void> storePersonalizedInsight(String? key, String? insight) =>
      (super.noSuchMethod(
            Invocation.method(#storePersonalizedInsight, [key, insight]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  String? getPersonalizedInsight(String? key) =>
      (super.noSuchMethod(Invocation.method(#getPersonalizedInsight, [key]))
          as String?);

  @override
  _i5.Future<String?> generateFlowAIInsights({
    required Map<String, dynamic>? cycleAnalysis,
    List<String>? patterns,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateFlowAIInsights, [], {
              #cycleAnalysis: cycleAnalysis,
              #patterns: patterns,
            }),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);
}
