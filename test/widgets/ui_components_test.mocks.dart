// Mocks generated by Mockito 5.4.6 from annotations
// in flow_ai/test/widgets/ui_components_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flow_ai/core/models/ai_insights.dart' as _i8;
import 'package:flow_ai/core/models/cycle_data.dart' as _i3;
import 'package:flow_ai/core/services/ai_engine.dart' as _i6;
import 'package:flow_ai/core/services/analytics_service.dart' as _i4;
import 'package:flow_ai/core/services/auth_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResult_0 extends _i1.SmartFake implements _i2.AuthResult {
  _FakeAuthResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCyclePrediction_1 extends _i1.SmartFake
    implements _i3.CyclePrediction {
  _FakeCyclePrediction_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCycleAnalytics_2 extends _i1.SmartFake
    implements _i4.CycleAnalytics {
  _FakeCycleAnalytics_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHealthAnalytics_3 extends _i1.SmartFake
    implements _i4.HealthAnalytics {
  _FakeHealthAnalytics_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePredictionAnalytics_4 extends _i1.SmartFake
    implements _i4.PredictionAnalytics {
  _FakePredictionAnalytics_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTrendAnalytics_5 extends _i1.SmartFake
    implements _i4.TrendAnalytics {
  _FakeTrendAnalytics_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i2.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  _i5.Future<bool> get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<dynamic> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<Map<String, dynamic>?> getUserData() =>
      (super.noSuchMethod(
            Invocation.method(#getUserData, []),
            returnValue: _i5.Future<Map<String, dynamic>?>.value(),
          )
          as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> isBiometricAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isBiometricAvailable, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> setBiometricEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setBiometricEnabled, [enabled]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  bool isBiometricEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isBiometricEnabled, []),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<_i2.AuthResult> authenticateWithBiometrics() =>
      (super.noSuchMethod(
            Invocation.method(#authenticateWithBiometrics, []),
            returnValue: _i5.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#authenticateWithBiometrics, []),
              ),
            ),
          )
          as _i5.Future<_i2.AuthResult>);

  @override
  _i5.Future<_i2.AuthResult> signUpWithEmail({
    required String? email,
    required String? password,
    required String? displayName,
    String? username,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUpWithEmail, [], {
              #email: email,
              #password: password,
              #displayName: displayName,
              #username: username,
            }),
            returnValue: _i5.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#signUpWithEmail, [], {
                  #email: email,
                  #password: password,
                  #displayName: displayName,
                  #username: username,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.AuthResult>);

  @override
  _i5.Future<_i2.AuthResult> signInWithEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmail, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#signInWithEmail, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.AuthResult>);

  @override
  _i5.Future<_i2.AuthResult> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i5.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(this, Invocation.method(#signInWithGoogle, [])),
            ),
          )
          as _i5.Future<_i2.AuthResult>);

  @override
  _i5.Future<_i2.AuthResult> signInWithApple() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithApple, []),
            returnValue: _i5.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(this, Invocation.method(#signInWithApple, [])),
            ),
          )
          as _i5.Future<_i2.AuthResult>);

  @override
  _i5.Future<_i2.AuthResult> updateProfile({
    String? displayName,
    String? username,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #username: username,
              #photoURL: photoURL,
            }),
            returnValue: _i5.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#updateProfile, [], {
                  #displayName: displayName,
                  #username: username,
                  #photoURL: photoURL,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.AuthResult>);

  @override
  _i5.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> isEmailRegistered(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#isEmailRegistered, [email]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<_i2.AuthResult> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i5.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(
                this,
                Invocation.method(#resetPassword, [email]),
              ),
            ),
          )
          as _i5.Future<_i2.AuthResult>);

  @override
  _i5.Future<_i2.AuthResult> deleteAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, []),
            returnValue: _i5.Future<_i2.AuthResult>.value(
              _FakeAuthResult_0(this, Invocation.method(#deleteAccount, [])),
            ),
          )
          as _i5.Future<_i2.AuthResult>);
}

/// A class which mocks [AIEngine].
///
/// See the documentation for Mockito's code generation for more information.
class MockAIEngine extends _i1.Mock implements _i6.AIEngine {
  MockAIEngine() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get isFlowAIEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isFlowAIEnabled),
            returnValue: false,
          )
          as bool);

  @override
  String get engineStatus =>
      (super.noSuchMethod(
            Invocation.getter(#engineStatus),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.getter(#engineStatus),
            ),
          )
          as String);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.CyclePrediction> predictNextCycle(
    List<_i3.CycleData>? historicalCycles,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#predictNextCycle, [historicalCycles]),
            returnValue: _i5.Future<_i3.CyclePrediction>.value(
              _FakeCyclePrediction_1(
                this,
                Invocation.method(#predictNextCycle, [historicalCycles]),
              ),
            ),
          )
          as _i5.Future<_i3.CyclePrediction>);

  @override
  _i5.Future<List<_i8.AIInsight>> generateInsights(
    List<_i3.CycleData>? cycles,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#generateInsights, [cycles]),
            returnValue: _i5.Future<List<_i8.AIInsight>>.value(
              <_i8.AIInsight>[],
            ),
          )
          as _i5.Future<List<_i8.AIInsight>>);

  @override
  _i5.Future<List<_i8.PatternDetection>> detectPatterns(
    List<_i3.CycleData>? cycles,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#detectPatterns, [cycles]),
            returnValue: _i5.Future<List<_i8.PatternDetection>>.value(
              <_i8.PatternDetection>[],
            ),
          )
          as _i5.Future<List<_i8.PatternDetection>>);

  @override
  _i5.Future<List<_i8.AIInsight>> generateEnhancedInsights({
    required String? userId,
    required List<_i3.CycleData>? cycles,
    List<String>? detectedPatterns,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateEnhancedInsights, [], {
              #userId: userId,
              #cycles: cycles,
              #detectedPatterns: detectedPatterns,
            }),
            returnValue: _i5.Future<List<_i8.AIInsight>>.value(
              <_i8.AIInsight>[],
            ),
          )
          as _i5.Future<List<_i8.AIInsight>>);
}

/// A class which mocks [AnalyticsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsService extends _i1.Mock implements _i4.AnalyticsService {
  MockAnalyticsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i4.CycleAnalytics> getCycleAnalytics({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCycleAnalytics, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<_i4.CycleAnalytics>.value(
              _FakeCycleAnalytics_2(
                this,
                Invocation.method(#getCycleAnalytics, [], {
                  #startDate: startDate,
                  #endDate: endDate,
                }),
              ),
            ),
          )
          as _i5.Future<_i4.CycleAnalytics>);

  @override
  _i5.Future<_i4.HealthAnalytics> getHealthAnalytics({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getHealthAnalytics, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<_i4.HealthAnalytics>.value(
              _FakeHealthAnalytics_3(
                this,
                Invocation.method(#getHealthAnalytics, [], {
                  #startDate: startDate,
                  #endDate: endDate,
                }),
              ),
            ),
          )
          as _i5.Future<_i4.HealthAnalytics>);

  @override
  _i5.Future<_i4.PredictionAnalytics> getPredictionAnalytics() =>
      (super.noSuchMethod(
            Invocation.method(#getPredictionAnalytics, []),
            returnValue: _i5.Future<_i4.PredictionAnalytics>.value(
              _FakePredictionAnalytics_4(
                this,
                Invocation.method(#getPredictionAnalytics, []),
              ),
            ),
          )
          as _i5.Future<_i4.PredictionAnalytics>);

  @override
  _i5.Future<_i4.TrendAnalytics> getTrendAnalytics({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTrendAnalytics, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<_i4.TrendAnalytics>.value(
              _FakeTrendAnalytics_5(
                this,
                Invocation.method(#getTrendAnalytics, [], {
                  #startDate: startDate,
                  #endDate: endDate,
                }),
              ),
            ),
          )
          as _i5.Future<_i4.TrendAnalytics>);

  @override
  _i5.Future<List<_i4.PersonalizedRecommendation>>
  getPersonalizedRecommendations() =>
      (super.noSuchMethod(
            Invocation.method(#getPersonalizedRecommendations, []),
            returnValue: _i5.Future<List<_i4.PersonalizedRecommendation>>.value(
              <_i4.PersonalizedRecommendation>[],
            ),
          )
          as _i5.Future<List<_i4.PersonalizedRecommendation>>);

  @override
  void logEvent(String? eventName, Map<String, dynamic>? parameters) =>
      super.noSuchMethod(
        Invocation.method(#logEvent, [eventName, parameters]),
        returnValueForMissingStub: null,
      );
}
